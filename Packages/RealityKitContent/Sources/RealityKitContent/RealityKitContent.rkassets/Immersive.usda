#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "handAnchor_left", "handAnchor_right"]

def Xform "Root"
{
    reorder nameChildren = ["Origin", "Material"]
    def Xform "Origin" (
        active = true
    )
    {
        reorder nameChildren = ["dome", "handAnchor_right", "handAnchor_left", "footAnchor_right", "footAnchor_left", "characterAnchor", "jesse"]
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "characterAnchor" (
            active = true
        )
        {
            reorder nameChildren = ["VFXEmitter", "jesse"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                uniform token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Constant"
                    token birthLocation = "Volume"
                    int64 burstCount = 200
                    float3 emissionDirection = (0, -1, 0)
                    double emissionDuration = 1
                    double emissionDurationVariation = 0
                    token emitterShape = "Cylinder"
                    double idleDuration = 0
                    double idleDurationVariation = 0
                    bool isEmitting = 1
                    bool isLocal = 0
                    bool isSpawningEnabled = 0
                    bool loops = 1
                    float particleSpeed = 0.08
                    float particleSpeedVariation = 0.04
                    float3 shapeSize = (1, 1.5, 1)
                    bool spawnInheritParentColor = 0
                    token spawnOccasion = "OnUpdate"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 1
                    double warmupDuration = 0

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, 0, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 750
                        float birthRateVariation = 10
                        token blendMode = "Alpha"
                        float colorEvolutionPower = 1
                        float dampingFactor = 0.3
                        float4 endColorA = (0.11966799, 0.8176309, 0.9493073, 1)
                        float4 endColorB = (1, 1, 1, 1)
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 2
                        float noiseScale = 1
                        float noiseStrength = 0.06
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 180
                        float particleAngleVariation = 180
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0.5
                        asset particleImage = @ParticleEmitterPresetTextures/snow.png@
                        double particleLifeSpan = 10
                        double particleLifeSpanVariation = 0.2
                        float particleMass = 1
                        float particleMassVariation = 0
                        float particleSize = 0.001
                        float particleSizeVariation = 0.002
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0.1
                        float sizeMultiplierAtEndOfLifespan = 0.8
                        float sizeMultiplierAtEndOfLifespanPower = 10
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 15
                        float4 startColorA = (1, 1, 1, 1)
                        float4 startColorB = (1, 1, 1, 1)
                        float stretchFactor = 0
                        bool useEndColor = 1
                        bool useEndColorRange = 0
                        bool useStartColorRange = 0
                        float3 vortexDirection = (0, -1, 1)
                        float vortexStrength = 0.015
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                    }
                }
            }

            def "jesse" (
                active = true
                references = @jesse.usdz@
            )
            {
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                over "Materials"
                {
                    reorder nameChildren = ["Material_0_001", "Material_0_002", "Material", "Material_2"]
                    def Material "Material"
                    {
                        reorder nameChildren = ["PreviewSurface", "GeometryModifier", "Diffuse_Color", "Normal", "Metallic", "Clearcoat", "Clearcoat_Roughness", "Emmisive", "AO", "Noise3D", "Sin", "Mix", "Range", "Multiply", "Time", "Combine2", "WorleyNoise2D", "Divide", "Clamp", "Minus", "Image", "Image_1", "Cos", "Sin_1", "Noise2D", "SmoothStep_1", "Multiply_1", "Time_2", "Remap", "Time_1", "SmoothStep", "Separate3", "RoughnessMetallicOcclusion"]
                        float inputs:NoiseDivisor = 0.85 (
                            customData = {
                                dictionary realitykit = {
                                    float2 positionInSubgraph = (-1764.2578, 953.5742)
                                    float2 sizeInSubgraph = (146.5, 53)
                                    int stackingOrderInSubgraph = 1549
                                }
                            }
                        )
                        token outputs:mtlx:surface.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/PreviewSurface.outputs:out>
                        token outputs:realitykit:vertex.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/GeometryModifier.outputs:out>
                        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:realitykit:vertex"]
                        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (424.63672, 172.44531)
                        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
                        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1549

                        def Shader "PreviewSurface"
                        {
                            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                            float inputs:clearcoat = 0
                            float inputs:clearcoatRoughness
                            color3f inputs:diffuseColor.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Diffuse_Color.outputs:out>
                            color3f inputs:emissiveColor.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Emmisive.outputs:out>
                            float inputs:ior
                            float inputs:metallic.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Separate3.outputs:outb>
                            float3 inputs:normal.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Normal.outputs:out>
                            float inputs:occlusion.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Separate3.outputs:outr>
                            float inputs:opacity.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Remap.outputs:out>
                            float inputs:opacityThreshold.connect = None
                            float inputs:roughness = 1
                            float inputs:roughness.connect = None
                            token outputs:out
                            float2 ui:nodegraph:node:pos = (150.4414, 156.125)
                            float2 ui:nodegraph:node:size = (159.5, 307)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced", "inputs:emissiveColor", "inputs:metallic", "inputs:diffuseColor", "inputs:roughness", "inputs:normal"]
                        }

                        def Shader "Diffuse_Color"
                        {
                            uniform token info:id = "ND_image_color3"
                            asset inputs:file = @textures/jesse_out_albedo.png@
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-166.6066, -856.5599)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:default"]
                        }

                        def Shader "Emmisive"
                        {
                            uniform token info:id = "ND_image_color3"
                            color3f inputs:default.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Mix.outputs:out>
                            asset inputs:file
                            string inputs:filtertype
                            float2 inputs:texcoord
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-168.24304, 696.9811)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:default", "inputs:file", "inputs:uaddressmode"]
                        }

                        def Shader "Noise3D"
                        {
                            uniform token info:id = "ND_noise3d_color3"
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-668.83203, 837.25)
                            float2 ui:nodegraph:node:size = (105, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Sin"
                        {
                            uniform token info:id = "ND_sin_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/WorleyNoise2D.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-802.19995, 997.6836)
                            float2 ui:nodegraph:node:size = (116, 40)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Mix"
                        {
                            uniform token info:id = "ND_mix_color3"
                            color3f inputs:bg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Noise3D.outputs:out>
                            color3f inputs:fg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Plus.outputs:out>
                            float inputs:mix.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Range.outputs:out>
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-337.07812, 776.25)
                            float2 ui:nodegraph:node:size = (109, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:mix"]
                        }

                        def Shader "Range"
                        {
                            uniform token info:id = "ND_range_float"
                            bool inputs:doclamp
                            float inputs:gamma
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Multiply.outputs:out>
                            float inputs:inhigh
                            float inputs:inlow = -1
                            float inputs:outhigh = 0.75
                            float inputs:outlow = 0.05
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-471.58612, 989.7558)
                            float2 ui:nodegraph:node:size = (98, 217)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Multiply"
                        {
                            uniform token info:id = "ND_multiply_float"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Sin.outputs:out>
                            float inputs:in2 = 2
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-637.6812, 988.5575)
                            float2 ui:nodegraph:node:size = (60, 36)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
                        }

                        def Shader "Time"
                        {
                            uniform token info:id = "ND_time_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1526.6932, 812.3516)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Combine2"
                        {
                            uniform token info:id = "ND_combine2_vector2"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Divide.outputs:out>
                            float inputs:in2 = 1
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Divide.outputs:out>
                            float2 outputs:out
                            float2 ui:nodegraph:node:pos = (-1221.8086, 1017.6406)
                            float2 ui:nodegraph:node:size = (144.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "WorleyNoise2D"
                        {
                            uniform token info:id = "ND_worleynoise2d_float"
                            float inputs:jitter
                            float2 inputs:texcoord.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Combine2.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1016.8711, 977.83594)
                            float2 ui:nodegraph:node:size = (148.5, 127)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Divide"
                        {
                            uniform token info:id = "ND_divide_float"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Time.outputs:out>
                            float inputs:in2 = 100
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Clamp.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1360.3438, 914.5078)
                            float2 ui:nodegraph:node:size = (61.5, 36)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
                        }

                        def Shader "Clamp"
                        {
                            uniform token info:id = "ND_clamp_float"
                            float inputs:high = 10000
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material.inputs:NoiseDivisor>
                            float inputs:low = 0.01
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1539.2734, 932.9492)
                            float2 ui:nodegraph:node:size = (91, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Image"
                        {
                            uniform token info:id = "ND_image_color3"
                            color3f inputs:default
                            asset inputs:file = @textures/jesse_out_bw_inverted.png@
                            string inputs:filtertype
                            float2 inputs:texcoord.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Combine2_2.outputs:out>
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-870.0015, 601.0584)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:file", "inputs:uaddressmode"]
                        }

                        def Shader "Image_1"
                        {
                            uniform token info:id = "ND_image_color3"
                            color3f inputs:default
                            asset inputs:file = @textures/jesse_out_emissive.png@
                            string inputs:filtertype
                            float2 inputs:texcoord.connect = None
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-866.36426, 369.97345)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:file", "inputs:vaddressmode"]
                        }

                        def Shader "Cos"
                        {
                            uniform token info:id = "ND_cos_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Time_2.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1052.3984, 195.30469)
                            float2 ui:nodegraph:node:size = (116, 40)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Sin_1"
                        {
                            uniform token info:id = "ND_sin_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Time_1.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-984.3457, -106.60434)
                            float2 ui:nodegraph:node:size = (118, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Noise2D"
                        {
                            uniform token info:id = "ND_noise2d_float"
                            float inputs:amplitude.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Multiply_1.outputs:out>
                            float inputs:pivot.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/SmoothStep_1.outputs:out>
                            float2 inputs:texcoord.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Combine2_1.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-539.64185, -117.493004)
                            float2 ui:nodegraph:node:size = (148.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:pivot", "inputs:amplitude"]
                        }

                        def Shader "SmoothStep_1"
                        {
                            uniform token info:id = "ND_smoothstep_float"
                            float inputs:high
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Cos.outputs:out>
                            float inputs:low = -1
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-819.6958, 159.54453)
                            float2 ui:nodegraph:node:size = (139.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Multiply_1"
                        {
                            uniform token info:id = "ND_multiply_float"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/SmoothStep.outputs:out>
                            float inputs:in2 = 6
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-803.8124, 1.8338568)
                            float2 ui:nodegraph:node:size = (60, 36)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
                        }

                        def Shader "Time_2"
                        {
                            uniform token info:id = "ND_time_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1303.1406, 182.82812)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Remap"
                        {
                            uniform token info:id = "ND_remap_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Noise2D.outputs:out>
                            float inputs:inlow = 0
                            float inputs:outhigh = 0.85
                            float inputs:outlow = 0.35
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-391.10886, 111.17317)
                            float2 ui:nodegraph:node:size = (94, 181)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:inhigh", "inputs:outhigh"]
                        }

                        def Shader "Time_1"
                        {
                            uniform token info:id = "ND_time_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1217.9473, -236.80356)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "SmoothStep"
                        {
                            uniform token info:id = "ND_smoothstep_float"
                            float inputs:high
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Sin_1.outputs:out>
                            float inputs:low = -1
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-808.9224, -105.543976)
                            float2 ui:nodegraph:node:size = (127.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Separate3"
                        {
                            uniform token info:id = "ND_separate3_color3"
                            color3f inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/RoughnessMetallicOcclusion.outputs:out>
                            float outputs:outb
                            float outputs:outg
                            float outputs:outr
                            float2 ui:nodegraph:node:pos = (-390.5723, -626.49603)
                            float2 ui:nodegraph:node:size = (115.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "RoughnessMetallicOcclusion"
                        {
                            uniform token info:id = "ND_image_color3"
                            asset inputs:file = @textures/jesse_out_occlusion.png@
                            string inputs:filtertype
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-604.33923, -776.38257)
                            float2 ui:nodegraph:node:size = (231, 199)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:default"]
                        }

                        def Shader "Normal"
                        {
                            uniform token info:id = "ND_image_vector3"
                            float3 inputs:default
                            asset inputs:file = @textures/jesse_out_normal.png@
                            string inputs:filtertype
                            float2 inputs:texcoord
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            float3 outputs:out
                            float2 ui:nodegraph:node:pos = (-168.4584, 20.013384)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "GeometryModifier"
                        {
                            uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
                            token outputs:out
                            float2 ui:nodegraph:node:pos = (434.08984, 441.97656)
                            float2 ui:nodegraph:node:size = (196.5, 325)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Combine2_1"
                        {
                            uniform token info:id = "ND_combine2_vector2"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/SmoothStep.outputs:out>
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/SmoothStep_1.outputs:out>
                            float2 outputs:out
                            float2 ui:nodegraph:node:pos = (-615.027, 54.326412)
                            float2 ui:nodegraph:node:size = (157, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Combine2_2"
                        {
                            uniform token info:id = "ND_combine2_vector2"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Cos_1.outputs:out>
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Sin_2.outputs:out>
                            float2 outputs:out
                            float2 ui:nodegraph:node:pos = (-1180.98, 391.1856)
                            float2 ui:nodegraph:node:size = (160, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Sin_2"
                        {
                            uniform token info:id = "ND_sin_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1434.1785, 275.9967)
                            float2 ui:nodegraph:node:size = (121.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Cos_1"
                        {
                            uniform token info:id = "ND_cos_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1443.848, 409.834)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Plus"
                        {
                            uniform token info:id = "ND_plus_color3"
                            color3f inputs:bg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Image.outputs:out>
                            color3f inputs:fg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Image_1.outputs:out>
                            float inputs:mix.connect = </Root/Origin/characterAnchor/jesse/Materials/Material/Noise2D.outputs:out>
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-594.13965, 498.37524)
                            float2 ui:nodegraph:node:size = (109, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }
                    }

                    over "Material_0_001"
                    {
                        token inputs:frame:stPrimvarName (
                            customData = {
                                dictionary realitykit = {
                                    float2 positionInSubgraph = (-115.25, 86.5)
                                    float2 sizeInSubgraph = (203.5, 53)
                                }
                            }
                        )
                        token outputs:mtlx:surface
                        token outputs:realitykit:vertex
                        token outputs:surface.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/surfaceShader.outputs:surface>
                        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (126.25, 109.5)
                        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

                        over "surfaceShader"
                        {
                            color3f inputs:diffuseColor.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/diffuseColor_texture.outputs:rgb>
                            float inputs:metallic.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/metallic_roughness_occlusion_texture.outputs:b>
                            normal3f inputs:normal.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/normal_texture.outputs:rgb>
                            float inputs:occlusion.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/metallic_roughness_occlusion_texture.outputs:r>
                            float inputs:roughness.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/metallic_roughness_occlusion_texture.outputs:g>
                        }

                        over "uvReader_st"
                        {
                            token inputs:varname.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001.inputs:frame:stPrimvarName>
                        }

                        over "normal_texture"
                        {
                            float2 inputs:st.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/uvReader_st.outputs:result>
                        }

                        over "diffuseColor_texture"
                        {
                            float2 inputs:st.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/uvReader_st.outputs:result>
                        }

                        over "metallic_roughness_occlusion_texture"
                        {
                            float2 inputs:st.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_001/uvReader_st.outputs:result>
                        }
                    }

                    over "Material_0_002"
                    {
                        token outputs:mtlx:surface
                        token outputs:realitykit:vertex
                        token outputs:surface.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/surfaceShader.outputs:surface>

                        over "surfaceShader"
                        {
                            color3f inputs:diffuseColor.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/diffuseColor_texture.outputs:rgb>
                            float inputs:metallic.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/metallic_roughness_occlusion_texture.outputs:b>
                            normal3f inputs:normal.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/normal_texture.outputs:rgb>
                            float inputs:occlusion.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/metallic_roughness_occlusion_texture.outputs:r>
                            float inputs:roughness.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/metallic_roughness_occlusion_texture.outputs:g>
                        }

                        over "uvReader_st"
                        {
                            token inputs:varname.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002.inputs:frame:stPrimvarName>
                        }

                        over "normal_texture"
                        {
                            float2 inputs:st.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/uvReader_st.outputs:result>
                        }

                        over "diffuseColor_texture"
                        {
                            float2 inputs:st.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/uvReader_st.outputs:result>
                        }

                        over "metallic_roughness_occlusion_texture"
                        {
                            float2 inputs:st.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_0_002/uvReader_st.outputs:result>
                        }
                    }

                    def Material "Material_1"
                    {
                        reorder nameChildren = ["PreviewSurface", "GeometryModifier", "Diffuse_Color", "Normal", "Metallic", "Clearcoat", "Clearcoat_Roughness", "Emmisive", "AO", "Noise3D", "Sin", "Mix", "Range", "Multiply", "Time", "Combine2", "WorleyNoise2D", "Divide", "Clamp", "Minus", "Image", "Image_1", "Cos", "Sin_1", "Noise2D", "SmoothStep_1", "Multiply_1", "Time_2", "Remap", "Time_1", "SmoothStep", "Separate3", "RoughnessMetallicOcclusion"]
                        float inputs:NoiseDivisor = 1.25 (
                            customData = {
                                dictionary realitykit = {
                                    float2 positionInSubgraph = (-1764.2578, 953.5742)
                                    float2 sizeInSubgraph = (146.5, 53)
                                    int stackingOrderInSubgraph = 1562
                                }
                            }
                        )
                        token outputs:mtlx:surface.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/PreviewSurface.outputs:out>
                        token outputs:realitykit:vertex.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/GeometryModifier.outputs:out>
                        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:realitykit:vertex"]
                        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (424.63672, 172.44531)
                        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
                        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1549

                        def Shader "PreviewSurface"
                        {
                            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                            float inputs:clearcoat = 1
                            float inputs:clearcoatRoughness.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Separate3.outputs:outg>
                            color3f inputs:diffuseColor.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Diffuse_Color.outputs:out>
                            color3f inputs:emissiveColor.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Emmisive.outputs:out>
                            float inputs:ior
                            float inputs:metallic.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Separate3.outputs:outb>
                            float3 inputs:normal.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Normal.inputs:default>
                            float inputs:occlusion.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Separate3.outputs:outr>
                            float inputs:opacity.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Remap.outputs:out>
                            float inputs:opacityThreshold.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Remap.outputs:out>
                            float inputs:roughness = 1
                            float inputs:roughness.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Separate3.outputs:outr>
                            token outputs:out
                            float2 ui:nodegraph:node:pos = (150.4414, 156.125)
                            float2 ui:nodegraph:node:size = (159.5, 307)
                            int ui:nodegraph:node:stackingOrder = 1563
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced", "inputs:emissiveColor", "inputs:metallic", "inputs:diffuseColor", "inputs:roughness", "inputs:normal", "inputs:clearcoat", "inputs:clearcoatRoughness"]
                        }

                        def Shader "Diffuse_Color"
                        {
                            uniform token info:id = "ND_image_color3"
                            asset inputs:file = @textures/jesse_in_albedo.png@
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-166.6066, -856.5599)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1564
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:default", "outputs:out", "inputs:default"]
                        }

                        def Shader "Emmisive"
                        {
                            uniform token info:id = "ND_image_color3"
                            color3f inputs:default.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Mix.outputs:out>
                            asset inputs:file
                            string inputs:filtertype
                            float2 inputs:texcoord
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-168.24304, 696.9811)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1553
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:default", "inputs:file", "inputs:uaddressmode", "inputs:texcoord"]
                        }

                        def Shader "Noise3D"
                        {
                            uniform token info:id = "ND_noise3d_color3"
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-668.83203, 837.25)
                            float2 ui:nodegraph:node:size = (105, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Sin"
                        {
                            uniform token info:id = "ND_sin_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/WorleyNoise2D.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-802.19995, 997.6836)
                            float2 ui:nodegraph:node:size = (116, 40)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Mix"
                        {
                            uniform token info:id = "ND_mix_color3"
                            color3f inputs:bg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Noise3D.outputs:out>
                            color3f inputs:fg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Plus.outputs:out>
                            float inputs:mix.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Range.outputs:out>
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-337.07812, 776.25)
                            float2 ui:nodegraph:node:size = (109, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:mix"]
                        }

                        def Shader "Range"
                        {
                            uniform token info:id = "ND_range_float"
                            bool inputs:doclamp
                            float inputs:gamma
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Multiply.outputs:out>
                            float inputs:inhigh
                            float inputs:inlow = -1
                            float inputs:outhigh = 0.75
                            float inputs:outlow = 0.05
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-471.58612, 989.7558)
                            float2 ui:nodegraph:node:size = (98, 217)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Multiply"
                        {
                            uniform token info:id = "ND_multiply_float"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Sin.outputs:out>
                            float inputs:in2 = 4
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-637.6812, 988.5575)
                            float2 ui:nodegraph:node:size = (60, 36)
                            int ui:nodegraph:node:stackingOrder = 1560
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
                        }

                        def Shader "Time"
                        {
                            uniform token info:id = "ND_time_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1526.6932, 812.3516)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Combine2"
                        {
                            uniform token info:id = "ND_combine2_vector2"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Divide.outputs:out>
                            float inputs:in2 = 1
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Divide.outputs:out>
                            float2 outputs:out
                            float2 ui:nodegraph:node:pos = (-1221.8086, 1017.6406)
                            float2 ui:nodegraph:node:size = (144.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "WorleyNoise2D"
                        {
                            uniform token info:id = "ND_worleynoise2d_float"
                            float inputs:jitter
                            float2 inputs:texcoord.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Combine2.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1016.8711, 977.83594)
                            float2 ui:nodegraph:node:size = (148.5, 127)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Divide"
                        {
                            uniform token info:id = "ND_divide_float"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Time.outputs:out>
                            float inputs:in2 = 100
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Clamp.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1360.3438, 914.5078)
                            float2 ui:nodegraph:node:size = (61.5, 36)
                            int ui:nodegraph:node:stackingOrder = 1559
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
                        }

                        def Shader "Clamp"
                        {
                            uniform token info:id = "ND_clamp_float"
                            float inputs:high = 10000
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1.inputs:NoiseDivisor>
                            float inputs:low = 0.01
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1539.2734, 932.9492)
                            float2 ui:nodegraph:node:size = (91, 145)
                            int ui:nodegraph:node:stackingOrder = 1558
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in"]
                        }

                        def Shader "Image"
                        {
                            uniform token info:id = "ND_image_color3"
                            color3f inputs:default
                            asset inputs:file = @textures/jesse_in_albedo.png@
                            string inputs:filtertype
                            float2 inputs:texcoord.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Combine2_2.outputs:out>
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-870.0015, 601.0584)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1568
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:file", "inputs:uaddressmode", "inputs:texcoord"]
                        }

                        def Shader "Image_1"
                        {
                            uniform token info:id = "ND_image_color3"
                            color3f inputs:default
                            asset inputs:file = @textures/jesse_in_emmisive.png@
                            string inputs:filtertype
                            float2 inputs:texcoord.connect = None
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-866.36426, 369.97345)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1570
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:file", "inputs:vaddressmode", "inputs:texcoord", "inputs:default"]
                        }

                        def Shader "Cos"
                        {
                            uniform token info:id = "ND_cos_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Time_2.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1052.3984, 195.30469)
                            float2 ui:nodegraph:node:size = (116, 40)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Sin_1"
                        {
                            uniform token info:id = "ND_sin_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Time_1.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-984.3457, -106.60434)
                            float2 ui:nodegraph:node:size = (118, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Noise2D"
                        {
                            uniform token info:id = "ND_noise2d_float"
                            float inputs:amplitude.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Multiply_1.outputs:out>
                            float inputs:pivot.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/SmoothStep_1.outputs:out>
                            float2 inputs:texcoord.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Combine2_1.outputs:out>
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-539.64185, -117.493004)
                            float2 ui:nodegraph:node:size = (148.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:pivot", "inputs:amplitude"]
                        }

                        def Shader "SmoothStep_1"
                        {
                            uniform token info:id = "ND_smoothstep_float"
                            float inputs:high
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Sin_1.outputs:out>
                            float inputs:low = -1
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-819.6958, 159.54453)
                            float2 ui:nodegraph:node:size = (139.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Multiply_1"
                        {
                            uniform token info:id = "ND_multiply_float"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/SmoothStep.outputs:out>
                            float inputs:in2 = 6
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-803.8124, 1.8338568)
                            float2 ui:nodegraph:node:size = (60, 36)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
                        }

                        def Shader "Time_2"
                        {
                            uniform token info:id = "ND_time_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1303.1406, 182.82812)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Remap"
                        {
                            uniform token info:id = "ND_remap_float"
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Noise2D.outputs:out>
                            float inputs:inlow = 0
                            float inputs:outhigh = 0.85
                            float inputs:outlow = 0.35
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-391.10886, 111.17317)
                            float2 ui:nodegraph:node:size = (94, 181)
                            int ui:nodegraph:node:stackingOrder = 1549
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:inhigh", "inputs:outhigh"]
                        }

                        def Shader "Time_1"
                        {
                            uniform token info:id = "ND_time_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1217.9473, -236.80356)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "SmoothStep"
                        {
                            uniform token info:id = "ND_smoothstep_float"
                            float inputs:high
                            float inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Cos.outputs:out>
                            float inputs:low = -1
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-808.9224, -105.543976)
                            float2 ui:nodegraph:node:size = (127.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Separate3"
                        {
                            uniform token info:id = "ND_separate3_color3"
                            color3f inputs:in.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/RoughnessMetallicOcclusion.outputs:out>
                            float outputs:outb
                            float outputs:outg
                            float outputs:outr
                            float2 ui:nodegraph:node:pos = (-390.5723, -626.49603)
                            float2 ui:nodegraph:node:size = (115.5, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "RoughnessMetallicOcclusion"
                        {
                            uniform token info:id = "ND_image_color3"
                            asset inputs:file = @textures/jesse_in_occlusion.png@
                            string inputs:filtertype
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-604.33923, -776.38257)
                            float2 ui:nodegraph:node:size = (231, 199)
                            int ui:nodegraph:node:stackingOrder = 1565
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:default"]
                        }

                        def Shader "Normal"
                        {
                            uniform token info:id = "ND_image_vector3"
                            float3 inputs:default
                            asset inputs:file = @textures/jesse_in_normal.png@
                            string inputs:filtertype
                            float2 inputs:texcoord
                            string inputs:uaddressmode
                            string inputs:vaddressmode
                            float3 outputs:out
                            float2 ui:nodegraph:node:pos = (-168.4584, 20.013384)
                            float2 ui:nodegraph:node:size = (148.5, 199)
                            int ui:nodegraph:node:stackingOrder = 1552
                            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uaddressmode"]
                        }

                        def Shader "GeometryModifier"
                        {
                            uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
                            token outputs:out
                            float2 ui:nodegraph:node:pos = (434.08984, 441.97656)
                            float2 ui:nodegraph:node:size = (196.5, 325)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Combine2_1"
                        {
                            uniform token info:id = "ND_combine2_vector2"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/SmoothStep.outputs:out>
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/SmoothStep_1.outputs:out>
                            float2 outputs:out
                            float2 ui:nodegraph:node:pos = (-615.027, 54.326412)
                            float2 ui:nodegraph:node:size = (157, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Combine2_2"
                        {
                            uniform token info:id = "ND_combine2_vector2"
                            float inputs:in1.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Sin_2.outputs:out>
                            float inputs:in2.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Cos_1.outputs:out>
                            float2 outputs:out
                            float2 ui:nodegraph:node:pos = (-1180.98, 391.1856)
                            float2 ui:nodegraph:node:size = (160, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Sin_2"
                        {
                            uniform token info:id = "ND_sin_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1434.1785, 275.9967)
                            float2 ui:nodegraph:node:size = (121.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Cos_1"
                        {
                            uniform token info:id = "ND_cos_float"
                            float outputs:out
                            float2 ui:nodegraph:node:pos = (-1443.848, 409.834)
                            float2 ui:nodegraph:node:size = (122.5, 53)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }

                        def Shader "Plus"
                        {
                            uniform token info:id = "ND_plus_color3"
                            color3f inputs:bg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Image.outputs:out>
                            color3f inputs:fg.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Image_1.outputs:out>
                            float inputs:mix.connect = </Root/Origin/characterAnchor/jesse/Materials/Material_1/Noise2D.outputs:out>
                            color3f outputs:out
                            float2 ui:nodegraph:node:pos = (-594.13965, 498.37524)
                            float2 ui:nodegraph:node:size = (109, 145)
                            int ui:nodegraph:node:stackingOrder = 1549
                        }
                    }
                }

                over "Geom"
                {
                    over "biped_robot_biped_robot_ace"
                    {
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        float3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        over "biped_robot_biped_robot_ace_skeleton"
                        {
                            over "biped_robot_root_91"
                            {
                                over "Mesh_0_001_92" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/Origin/characterAnchor/jesse/Materials/Material> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                }

                                over "Mesh_0_002_93" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/Origin/characterAnchor/jesse/Materials/Material_1> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        def Xform "footAnchor_left" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                uniform token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Normal"
                    token birthLocation = "Surface"
                    int64 burstCount = 5
                    float3 emissionDirection = (0, 0, 0)
                    double emissionDuration = 1
                    double emissionDurationVariation = 0
                    token emitterShape = "Sphere"
                    double idleDuration = 0
                    double idleDurationVariation = 0
                    bool isLocal = 0
                    bool isLocalFields = 1
                    bool isSpawningEnabled = 1
                    bool loops = 1
                    float particleSpeed = 0.06
                    float particleSpeedVariation = 0.04
                    float3 shapeSize = (0.05, 0.05, 0.05)
                    bool spawnInheritParentColor = 1
                    token spawnOccasion = "OnUpdate"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 1
                    double warmupDuration = 1.5

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, 0, 0)
                        token animationRepeatMode = "Looping"
                        token billboardMode = "Billboard"
                        float birthRate = 40
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 2
                        int64 columnCount = 4
                        float dampingFactor = 0.015
                        float4 endColorA = (1, 1, 1, 1)
                        float4 endColorB = (0.37298912, 0, 0.99670506, 1)
                        float frameRate = 60
                        float frameRateVariation = 0
                        int64 initialFrame = 0
                        int64 initialFrameVariation = 2
                        bool isAnimated = 1
                        bool isLightingEnabled = 1
                        float noiseAnimationSpeed = 2
                        float noiseScale = 2
                        float noiseStrength = 0.2
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0.5
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0.5
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 10
                        double particleLifeSpanVariation = 0.2
                        float particleMass = 1
                        float particleMassVariation = 0.2
                        float particleSize = 0.03
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (1, 1, 0)
                        float radialGravityStrength = 0.75
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0.35
                        float sizeMultiplierAtEndOfLifespanPower = 3
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 90
                        float4 startColorA = (1, 0.3124425, 0, 1)
                        float4 startColorB = (0.9281547, 0.9273373, 1, 1)
                        float stretchFactor = 0
                        bool useEndColor = 1
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, -1, 0)
                        float vortexStrength = 0.3
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, -0.04, 0)
                        token animationRepeatMode = "AutoReverse"
                        token billboardMode = "Billboard"
                        float birthRate = 25
                        float birthRateVariation = 0
                        token blendMode = "Alpha"
                        float colorEvolutionPower = 0
                        int64 columnCount = 4
                        float dampingFactor = 3
                        float4 endColorA = (0, 0.98059916, 1, 1)
                        float4 endColorB = (1, 0.051991113, 1, 1)
                        float frameRate = 24
                        float frameRateVariation = 0
                        int64 initialFrame = 2
                        int64 initialFrameVariation = 4
                        bool isAnimated = 1
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0.25
                        float noiseScale = 1
                        float noiseStrength = 0.1
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0.745
                        float particleAngleVariation = 0.25
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 0.75
                        double particleLifeSpanVariation = 0.25
                        float particleMass = 1
                        float particleMassVariation = 2
                        float particleSize = 0.02
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0
                        float sizeMultiplierAtEndOfLifespanPower = 1
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0
                        float4 startColorA = (1, 0.051991113, 1, 0.04)
                        float4 startColorB = (0, 0.98059916, 1, 0.04)
                        float stretchFactor = 0
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }
                }
            }
        }

        def Xform "handAnchor_left" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                uniform token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Normal"
                    token birthLocation = "Surface"
                    int64 burstCount = 10
                    float3 emissionDirection = (0, 0, 0)
                    double emissionDuration = 1
                    double emissionDurationVariation = 0
                    token emitterShape = "Sphere"
                    double idleDuration = 0
                    double idleDurationVariation = 0
                    bool isLocal = 0
                    bool isLocalFields = 1
                    bool isSpawningEnabled = 1
                    bool loops = 1
                    float particleSpeed = 0.06
                    float particleSpeedVariation = 0.04
                    float3 shapeSize = (0.05, 0.05, 0.05)
                    bool spawnInheritParentColor = 1
                    token spawnOccasion = "OnUpdate"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 1
                    double warmupDuration = 1.5

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, 0, 0)
                        token animationRepeatMode = "Looping"
                        token billboardMode = "Billboard"
                        float birthRate = 120
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 2
                        int64 columnCount = 4
                        float dampingFactor = 0.015
                        float4 endColorA = (1, 1, 1, 1)
                        float4 endColorB = (0.37298912, 0, 0.99670506, 1)
                        float frameRate = 60
                        float frameRateVariation = 0
                        int64 initialFrame = 0
                        int64 initialFrameVariation = 2
                        bool isAnimated = 1
                        bool isLightingEnabled = 1
                        float noiseAnimationSpeed = 2
                        float noiseScale = 2
                        float noiseStrength = 0.2
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0.5
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0.5
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 20
                        double particleLifeSpanVariation = 0.2
                        float particleMass = 1
                        float particleMassVariation = 0.2
                        float particleSize = 0.03
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (1, 1, 0)
                        float radialGravityStrength = 0.75
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0.35
                        float sizeMultiplierAtEndOfLifespanPower = 3
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 90
                        float4 startColorA = (1, 0.3124425, 0, 1)
                        float4 startColorB = (0.9281547, 0.9273373, 1, 1)
                        float stretchFactor = 0
                        bool useEndColor = 1
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 0, 0)
                        float vortexStrength = 0.3
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, -0.04, 0)
                        token animationRepeatMode = "AutoReverse"
                        token billboardMode = "Billboard"
                        float birthRate = 25
                        float birthRateVariation = 0
                        token blendMode = "Alpha"
                        float colorEvolutionPower = 0
                        int64 columnCount = 4
                        float dampingFactor = 3
                        float4 endColorA = (0, 0.98059916, 1, 1)
                        float4 endColorB = (1, 0.051991113, 1, 1)
                        float frameRate = 24
                        float frameRateVariation = 0
                        int64 initialFrame = 2
                        int64 initialFrameVariation = 4
                        bool isAnimated = 1
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0.25
                        float noiseScale = 1
                        float noiseStrength = 0.1
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0.745
                        float particleAngleVariation = 0.25
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 0.75
                        double particleLifeSpanVariation = 0.25
                        float particleMass = 1
                        float particleMassVariation = 2
                        float particleSize = 0.02
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0
                        float sizeMultiplierAtEndOfLifespanPower = 1
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0
                        float4 startColorA = (1, 0.051991113, 1, 0.04)
                        float4 startColorB = (0, 0.98059916, 1, 0.04)
                        float stretchFactor = 0
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }
                }
            }
        }

        def Xform "handAnchor_right" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                uniform token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Normal"
                    token birthLocation = "Surface"
                    int64 burstCount = 10
                    float3 emissionDirection = (0, 0, 0)
                    double emissionDuration = 1
                    double emissionDurationVariation = 0
                    token emitterShape = "Sphere"
                    double idleDuration = 0
                    double idleDurationVariation = 0
                    bool isLocal = 0
                    bool isLocalFields = 1
                    bool isSpawningEnabled = 1
                    bool loops = 1
                    float particleSpeed = 0.06
                    float particleSpeedVariation = 0.04
                    float3 shapeSize = (0.05, 0.05, 0.05)
                    bool spawnInheritParentColor = 1
                    token spawnOccasion = "OnUpdate"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 1
                    double warmupDuration = 1.5

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, 0, 0)
                        token animationRepeatMode = "Looping"
                        token billboardMode = "Billboard"
                        float birthRate = 120
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 2
                        int64 columnCount = 4
                        float dampingFactor = 0.15
                        float4 endColorA = (1, 1, 1, 1)
                        float4 endColorB = (1, 0, 0.97343045, 1)
                        float frameRate = 60
                        float frameRateVariation = 0
                        int64 initialFrame = 0
                        int64 initialFrameVariation = 2
                        bool isAnimated = 1
                        bool isLightingEnabled = 1
                        float noiseAnimationSpeed = 2
                        float noiseScale = 2
                        float noiseStrength = 0.2
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0.5
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0.5
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 20
                        double particleLifeSpanVariation = 0.2
                        float particleMass = 1
                        float particleMassVariation = 0.2
                        float particleSize = 0.03
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (1, 1, 0)
                        float radialGravityStrength = 0.75
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0.35
                        float sizeMultiplierAtEndOfLifespanPower = 3
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 90
                        float4 startColorA = (1, 0, 0, 1)
                        float4 startColorB = (0.9281547, 0.9273373, 1, 1)
                        float stretchFactor = 0
                        bool useEndColor = 1
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 0, 0)
                        float vortexStrength = 0.3
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, -0.04, 0)
                        token animationRepeatMode = "AutoReverse"
                        token billboardMode = "Billboard"
                        float birthRate = 25
                        float birthRateVariation = 0
                        token blendMode = "Alpha"
                        float colorEvolutionPower = 0
                        int64 columnCount = 4
                        float dampingFactor = 3
                        float4 endColorA = (0, 0.98059916, 1, 1)
                        float4 endColorB = (1, 0.051991113, 1, 1)
                        float frameRate = 24
                        float frameRateVariation = 0
                        int64 initialFrame = 2
                        int64 initialFrameVariation = 4
                        bool isAnimated = 1
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0.25
                        float noiseScale = 1
                        float noiseStrength = 0.1
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0.745
                        float particleAngleVariation = 0.25
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 0.75
                        double particleLifeSpanVariation = 0.25
                        float particleMass = 1
                        float particleMassVariation = 2
                        float particleSize = 0.02
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0
                        float sizeMultiplierAtEndOfLifespanPower = 1
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0
                        float4 startColorA = (1, 0.051991113, 1, 0.04)
                        float4 startColorB = (0, 0.98059916, 1, 0.04)
                        float stretchFactor = 0
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }
                }
            }
        }

        def Xform "footAnchor_right" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                uniform token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Normal"
                    token birthLocation = "Surface"
                    int64 burstCount = 3
                    float3 emissionDirection = (0, 0, 0)
                    double emissionDuration = 1
                    double emissionDurationVariation = 0
                    token emitterShape = "Sphere"
                    double idleDuration = 0
                    double idleDurationVariation = 0
                    bool isLocal = 0
                    bool isLocalFields = 1
                    bool isSpawningEnabled = 1
                    bool loops = 1
                    float particleSpeed = 0.06
                    float particleSpeedVariation = 0.04
                    float3 shapeSize = (0.05, 0.05, 0.05)
                    bool spawnInheritParentColor = 1
                    token spawnOccasion = "OnUpdate"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 1
                    double warmupDuration = 1.5

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, 0, 0)
                        token animationRepeatMode = "Looping"
                        float3 billboardAxis = (0, 1, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 40
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 2
                        int64 columnCount = 4
                        float dampingFactor = 0.15
                        float4 endColorA = (1, 1, 1, 1)
                        float4 endColorB = (1, 0, 0.97343045, 1)
                        float frameRate = 60
                        float frameRateVariation = 0
                        int64 initialFrame = 0
                        int64 initialFrameVariation = 2
                        bool isAnimated = 1
                        bool isLightingEnabled = 1
                        float noiseAnimationSpeed = 2
                        float noiseScale = 2
                        float noiseStrength = 0.2
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0.5
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0.5
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 10
                        double particleLifeSpanVariation = 0.2
                        float particleMass = 1
                        float particleMassVariation = 0.2
                        float particleSize = 0.03
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (1, 1, 0)
                        float radialGravityStrength = 0.75
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0.35
                        float sizeMultiplierAtEndOfLifespanPower = 3
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 90
                        float4 startColorA = (1, 0, 0, 1)
                        float4 startColorB = (0.9281547, 0.9273373, 1, 1)
                        float stretchFactor = 0
                        bool useEndColor = 1
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, -1, 0)
                        float vortexStrength = 0.3
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, -0.04, 0)
                        token animationRepeatMode = "AutoReverse"
                        token billboardMode = "Billboard"
                        float birthRate = 25
                        float birthRateVariation = 0
                        token blendMode = "Alpha"
                        float colorEvolutionPower = 0
                        int64 columnCount = 4
                        float dampingFactor = 3
                        float4 endColorA = (0, 0.98059916, 1, 1)
                        float4 endColorB = (1, 0.051991113, 1, 1)
                        float frameRate = 24
                        float frameRateVariation = 0
                        int64 initialFrame = 2
                        int64 initialFrameVariation = 4
                        bool isAnimated = 1
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0.25
                        float noiseScale = 1
                        float noiseStrength = 0.1
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0.745
                        float particleAngleVariation = 0.25
                        float particleAngularVelocity = 0.25
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @ParticleEmitterPresetTextures/twinkle.exr@
                        double particleLifeSpan = 0.75
                        double particleLifeSpanVariation = 0.25
                        float particleMass = 1
                        float particleMassVariation = 2
                        float particleSize = 0.02
                        float particleSizeVariation = 0.004
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0
                        int64 rowCount = 4
                        float sizeMultiplierAtEndOfLifespan = 0
                        float sizeMultiplierAtEndOfLifespanPower = 1
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0
                        float4 startColorA = (1, 0.051991113, 1, 0.04)
                        float4 startColorB = (0, 0.98059916, 1, 0.04)
                        float stretchFactor = 0
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 1
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }
                }
            }
        }

        def "dome" (
            active = true
            references = @dome_invertednormals.usdz@
        )
        {
            float3 xformOp:scale = (15, 15, 15)
            float3 xformOp:translate = (0, 0.5, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }
}

